{
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(docker compose exec:*)",
      "Bash(docker run:*)",
      "Bash(find:*)",
      "Bash(gh pr view:*)",
      "Bash(gh run view:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git fetch:*)",
      "Bash(git rebase:*)",
      "Bash(git stash:*)",
      "Bash(git switch:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(rg:*)",
      "Fetch(https://docs.anthropic.com/*)",
      "Fetch(https://github.com/*)",
      "Read(~/Developer/**)",
      "mcp__context7__get-library-docs",
      "mcp__context7__resolve-library-id",
      "mcp__puppeteer__puppeteer_click",
      "mcp__puppeteer__puppeteer_evaluate",
      "mcp__puppeteer__puppeteer_fill",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__workos__workos_docs",
      "mcp__workos__workos_search"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "/Users/nicknisi/Developer/dotfiles/bin/claude-status-hook PreToolUse"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "/Users/nicknisi/Developer/dotfiles/bin/claude-status-hook Stop"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "/Users/nicknisi/Developer/dotfiles/bin/claude-status-hook SubagentStop"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "/Users/nicknisi/Developer/dotfiles/bin/claude-status-hook Notification"
          }
        ]
      }
    ]
  },
  "model": "opus",
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); current_dir=\"$(echo \"$input\" | jq -r '.workspace.current_dir')\"; model=\"$(echo \"$input\" | jq -r '.model.display_name')\"; output_style=\"$(echo \"$input\" | jq -r '.output_style.name')\"; printf '\\033[1;75m%s\\033[0m' \"$(basename \"$current_dir\")\"; if [[ -d \"$current_dir/.git\" ]]; then branch=$(git --git-dir=\"$current_dir/.git\" --work-tree=\"$current_dir\" branch --show-current 2>/dev/null); if [[ -n \"$branch\" ]]; then printf ' \\033[38;5;241m%s\\033[0m' \"$branch\"; git_status=$(git --git-dir=\"$current_dir/.git\" --work-tree=\"$current_dir\" status --porcelain 2>/dev/null); if [[ -n \"$git_status\" ]]; then printf ' \\033[38;5;3m\\033[0m'; else printf ' \\033[38;5;2m\\033[0m'; fi; fi; fi; printf ' \\033[2m%s\\033[0m' \"$model\""
  }
}